params {
  reads = "data/*.fastq.gz"
  reference = "data/reference.fasta"
  outdir = "results"
  intermediate = "datafiles"
}

run {
  name = 'illumina2lineage'
}

process {
  executor = 'local'
  scratch = true
  publishDirMode = 'copy'

  withLabel: 'light' {
    cpus = 2
    memory = '2 GB'
    time = '1h'
  }

  withLabel: 'medium' {
    cpus = 4
    memory = '8 GB'
    time = '4h'
  }

  withLabel: 'heavy' {
    cpus = 8
    memory = '16 GB'
    time = '12h'
  }

  withName: 'qc' {
    conda = 'envs/qc.yaml'
    label = 'medium'
  }

  withName: 'mapping' {
    conda = 'envs/mapping.yaml'
    label = 'medium'
  }

  withName: 'primerClipping' {
    conda = 'envs/bamclipper.yaml'
    label = 'light'
  }

  withName: 'variantCalling' {
    conda = 'envs/freebayes.yaml'
    label = 'medium'
  }

  withName: 'vcfMaskingQC' {
    conda = 'envs/rcore.yaml'
    label = 'light'
  }

  withName: 'consensusGeneration' {
    conda = 'envs/bcftools.yaml'
    label = 'light'
  }

  withName: 'pangolinLineage' {
    conda = 'envs/pangolin.yaml'
    label = 'light'
  }

  withName: 'consensusQC' {
    conda = 'envs/president.yaml'
    label = 'light'
  }

  withName: 'phylogeny' {
    conda = 'envs/phylogeny.yaml'
    label = 'medium'
  }
}

workflow {
  workDir = 'work'
}

conda {
  enabled = true
}


docker.enabled = false
singularity.enabled = false

report {
  enabled = true
  file = "${params.outdir}/report.html"
}

timeline {
  enabled = true
  file = "${params.outdir}/timeline.html"
}

trace {
  enabled = true
  file = "${params.outdir}/trace.txt"
}

log {
  enabled = true
  file = "${params.outdir}/pipeline.log"
}

// Profiles
profiles {
  standard {
    process.executor = 'local'
  }
  docker {
    docker.enabled = true
  }

  conda {
    conda.enabled = true
  }
}
